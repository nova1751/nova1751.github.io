'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var postcss = _interopDefault(require('postcss'));
var kebabCase = _interopDefault(require('kebab-case'));

// list of all plugins
var plugins = [
  {
    name: 'postcss-smart-import',
    namespace: 'smart-import',
    defaults: {}
  },
  {
    name: 'postcss-calc',
    namespace: 'calc',
    defaults: {}
  },
  {
    name: 'postcss-mixins',
    namespace: 'mixins',
    defaults: {}
  },
  {
    name: 'postcss-advanced-variables',
    namespace: 'advanced-variables',
    defaults: {}
  },
  {
    name: 'postcss-custom-media',
    namespace: 'custom-media',
    defaults: {}
  },
  {
    name: 'postcss-custom-properties',
    namespace: 'custom-properties',
    defaults: {}
  },
  {
    name: 'postcss-media-minmax',
    namespace: 'media-minmax',
    defaults: {}
  },
  {
    name: 'postcss-nested',
    namespace: 'nested',
    defaults: {}
  },
  {
    name: 'postcss-custom-selectors',
    namespace: 'custom-selectors',
    defaults: {}
  },
  {
    name: 'postcss-property-lookup',
    namespace: 'property-lookup',
    defaults: {
      logLevel: 'warn'
    }
  },
  {
    name: 'postcss-selector-matches',
    namespace: 'selector-matches',
    defaults: {}
  },
  {
    name: 'postcss-selector-not',
    namespace: 'selector-not',
    defaults: {}
  }
];

// load all plugins
var index = postcss.plugin('cssbag', function (options) {
  if ( options === void 0 ) options = {};

  var instance = postcss();

  // for each plugin
  for (var i = 0, list = plugins; i < list.length; i += 1) {
    var plugin = list[i];

    var userOptions = options[plugin.namespace] || options[kebabCase(plugin.namespace)];

    var pluginOptions = Object.assign({}, plugin.defaults, userOptions);

    if (!pluginOptions.disable) {
      instance.use(require(plugin.name)(pluginOptions));
    }
  }

  return instance
});

module.exports = index;
