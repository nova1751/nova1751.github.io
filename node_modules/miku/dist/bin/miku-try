#!/usr/bin/env node
'use strict';

var _meow2 = require('meow');

var _meow3 = _interopRequireDefault(_meow2);

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

var _handleError = require('../lib/handle-error');

var _handleError2 = _interopRequireDefault(_handleError);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _meow = (0, _meow3.default)(`
  Usage: ${ _chalk2.default.yellow('miku [files]') }

  ${ _chalk2.default.bold('Example:') }
    $ miku                       ${ _chalk2.default.dim('# get all *.opai.js|css|html files') }
    $ miku example.js style.css  ${ _chalk2.default.dim('# custom file') }
    $ miku *.js *.css            ${ _chalk2.default.dim('# glob patterns') }

  ${ _chalk2.default.bold('Options:') }
    ${ _chalk2.default.yellow('--port') }                ${ _chalk2.default.dim('Server port') }
    ${ _chalk2.default.yellow('--pragma') }              ${ _chalk2.default.dim('Specific JSX pragma, default is React.createElement') }
    ${ _chalk2.default.yellow('--production, --prod') }  ${ _chalk2.default.dim('Build in production mode') }

  ${ _chalk2.default.bold('Commands:') }
    ${ _chalk2.default.yellow('*') }            ${ _chalk2.default.dim('Run miku') }
    ${ _chalk2.default.yellow('init') }         ${ _chalk2.default.dim('Initialize an empty project for miku use') }
`, {
  alias: {
    h: 'help',
    v: 'version',
    prod: 'production'
  }
});

const input = _meow.input,
      flags = _meow.flags;


require('../lib').default(input, flags).catch(_handleError2.default);