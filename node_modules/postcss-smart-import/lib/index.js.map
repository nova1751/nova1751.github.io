{"version":3,"file":null,"sources":["../src/resolve-id.js","../src/load-content.js","../src/parse-statements.js","../src/index.js"],"sourcesContent":["import resolve from \"resolve\"\n\nvar moduleDirectories =\n[\n  \"web_modules\",\n  \"node_modules\"\n]\n\nfunction resolveModule(id, opts)\n{\n  return new Promise((res, rej) => {\n    resolve(id, opts, (err, path) => {\n      if (err)\n        return rej(err)\n\n      res(path)\n    })\n  })\n}\n\nexport default function(id, base, options)\n{\n  var paths = options.path\n\n  var resolveOpts =\n  {\n    basedir: base,\n    moduleDirectory: moduleDirectories,\n    paths: paths,\n    extensions: [ \".css\", \".sss\", \".less\", \".scss\", \".sass\" ],\n    packageFilter: function processPackage(pkg)\n    {\n      if (pkg.style) {\n        pkg.main = pkg.style\n      }\n      else if (pkg.browser) {\n        pkg.main = pkg.browser\n      }\n      else if (!pkg.main || !(/\\.css$/).test(pkg.main)) {\n        pkg.main = \"index.css\"\n      }\n      return pkg\n    }\n  }\n\n  return resolveModule(\"./\" + id, resolveOpts)\n    .catch(() =>\n       resolveModule(id, resolveOpts)\n    )\n    .catch(() => {\n      if (paths.indexOf(base) === -1) {\n        paths.unshift(base)\n      }\n\n      throw new Error([\n        \"Failed to find '\" + id + \"'\",\n        \"in [ \",\n        \"    \" + paths.join(\",\\n        \"),\n        \"]\",\n      ].join(\"\\n    \"))\n    })\n}\n","import readCache from \"read-cache\"\n\nexport default function loadContent(filename)\n{\n  return readCache(filename, \"utf-8\")\n}\n","import valueParser from \"postcss-value-parser\"\n\nvar stringify = valueParser.stringify\n\nfunction split(params, start)\n{\n  var list = []\n  var last = params.reduce((item, node, index) => {\n    if (index < start) {\n      return \"\"\n    }\n\n    if (node.type === \"div\" && node.value === \",\") {\n      list.push(item)\n      return \"\"\n    }\n\n    return item + stringify(node)\n  }, \"\")\n\n  list.push(last)\n  return list\n}\n\nexport default function(result, styles)\n{\n  var statements = []\n  var nodes = []\n\n  styles.each((node) => {\n    var stmt\n    if (node.type === \"atrule\" && node.name === \"import\")\n      stmt = parseImport(result, node)\n\n    if (stmt)\n    {\n      if (nodes.length)\n      {\n        statements.push({\n          type: \"nodes\",\n          nodes: nodes\n        })\n        nodes = []\n      }\n\n      statements.push(stmt)\n    }\n    else\n    {\n      nodes.push(node)\n    }\n  })\n\n  if (nodes.length)\n  {\n    statements.push(\n      {\n        type: \"nodes\",\n        nodes: nodes\n      })\n  }\n\n  return statements\n}\n\nfunction parseImport(result, atRule)\n{\n  var prev = atRule.prev()\n  while (prev && prev.type === \"comment\") {\n    prev = prev.prev()\n  }\n\n  if (prev)\n  {\n    if (prev.type !== \"atrule\" || prev.name !== \"import\" && prev.name !== \"charset\")\n    {\n      return result.warn(\n        \"@import must precede all other statements (besides @charset)\",\n        { node: atRule }\n      )\n    }\n  }\n\n  if (atRule.nodes)\n  {\n    return result.warn(\n      \"It looks like you didn't end your @import statement correctly. \" +\n      \"Child nodes are attached to it.\",\n      { node: atRule }\n    )\n  }\n\n  var params = valueParser(atRule.params).nodes\n  var stmt = {\n    type: \"import\",\n    node: atRule\n  }\n\n  if (\n    !params.length ||\n    (\n      params[0].type !== \"string\" ||\n      !params[0].value\n    ) &&\n    (\n      params[0].type !== \"function\" ||\n      params[0].value !== \"url\" ||\n      !params[0].nodes.length ||\n      !params[0].nodes[0].value\n    )\n  ) {\n    return result.warn(\n      \"Unable to find uri in '\" + atRule.toString() + \"'\",\n      { node: atRule }\n    )\n  }\n\n  if (params[0].type === \"string\")\n    stmt.uri = params[0].value\n  else\n    stmt.uri = params[0].nodes[0].value\n\n  stmt.fullUri = stringify(params[0])\n\n  return stmt\n}\n","import path from \"path\"\nimport assign from \"object-assign\"\nimport postcss from \"postcss\"\n\nimport resolveId from \"./resolve-id\"\nimport loadContent from \"./load-content\"\nimport parseStatements from \"./parse-statements\"\nimport promiseEach from \"promise-each\"\n\nfunction SmartImport(options)\n{\n  options = assign({\n    root: process.cwd(),\n    path: [],\n    skipDuplicates: true,\n    resolve: resolveId,\n    load: loadContent,\n    plugins: [],\n  }, options)\n\n  options.root = path.resolve(options.root)\n\n  // convert string to an array of a single element\n  if (typeof options.path === \"string\")\n    options.path = [ options.path ]\n\n  if (!Array.isArray(options.path))\n    options.path = []\n\n  options.path = options.path.map((p) =>\n     path.resolve(options.root, p)\n  )\n\n  return function(styles, result)\n  {\n    var state = {\n      importedFiles: {},\n      hashFiles: {},\n    }\n\n    if (styles.source && styles.source.input && styles.source.input.file)\n      state.importedFiles[styles.source.input.file] = {}\n\n    if (options.plugins && !Array.isArray(options.plugins))\n      throw new Error(\"plugins option must be an array\")\n\n    return parseStyles(result, styles, options, state, [])\n      .then((bundle) => {\n        applyRaws(bundle)\n        applyStyles(bundle, styles)\n\n        if (typeof options.addDependencyTo === \"object\" && typeof options.addDependencyTo.addDependency === \"function\")\n          Object.keys(state.importedFiles).forEach(options.addDependencyTo.addDependency)\n\n        if (typeof options.onImport === \"function\")\n          options.onImport(Object.keys(state.importedFiles))\n      })\n  }\n}\n\nfunction applyRaws(bundle)\n{\n  bundle.forEach((stmt, index) => {\n    if (index === 0)\n      return\n\n    if (stmt.parent)\n    {\n      var before = stmt.parent.node.raws.before\n      if (stmt.type === \"nodes\")\n        stmt.nodes[0].raws.before = before\n      else\n        stmt.node.raws.before = before\n    }\n    else if (stmt.type === \"nodes\")\n    {\n      stmt.nodes[0].raws.before = stmt.nodes[0].raws.before || \"\\n\"\n    }\n  })\n}\n\nfunction applyStyles(bundle, styles)\n{\n  styles.nodes = []\n\n  bundle.forEach((stmt) => {\n    if (stmt.type === \"import\")\n    {\n      stmt.node.parent = undefined\n      styles.append(stmt.node)\n    }\n    else if (stmt.type === \"media\")\n    {\n      stmt.node.parent = undefined\n      styles.append(stmt.node)\n    }\n    else if (stmt.type === \"nodes\")\n    {\n      stmt.nodes.forEach((node) => {\n        node.parent = undefined\n        styles.append(node)\n      })\n    }\n  })\n}\n\nfunction parseStyles(result, styles, options, state, media)\n{\n  var statements = parseStatements(result, styles)\n\n  return Promise.resolve(statements).then(promiseEach((stmt) => {\n    // skip protocol base uri (protocol://url) or protocol-relative\n    if (stmt.type !== \"import\" || (/^(?:[a-z]+:)?\\/\\//i).test(stmt.uri))\n      return\n    else\n      return resolveImportId(result, stmt, options, state)\n  }))\n  .then(() => {\n    var imports = []\n    var bundle = []\n\n    // squash statements and their children\n    statements.forEach((stmt) => {\n      if (stmt.type === \"import\")\n      {\n        if (stmt.children)\n        {\n          stmt.children.forEach((child, index) => {\n            if (child.type === \"import\")\n              imports.push(child)\n            else\n              bundle.push(child)\n\n            // For better output\n            if (index === 0)\n              child.parent = stmt\n          })\n        }\n        else\n        {\n          imports.push(stmt)\n        }\n      }\n      else if (stmt.type === \"media\" || stmt.type === \"nodes\")\n      {\n        bundle.push(stmt)\n      }\n    })\n\n    return imports.concat(bundle)\n  })\n}\n\nfunction resolveImportId(result, stmt, options, state)\n{\n  var atRule = stmt.node\n  var base = atRule.source && atRule.source.input && atRule.source.input.file\n    ? path.dirname(atRule.source.input.file)\n    : options.root\n\n  return Promise.resolve(options.resolve(stmt.uri, base, options))\n    .then((resolved) => {\n      if (!Array.isArray(resolved))\n        resolved = [ resolved ]\n\n      return Promise.all(resolved.map((file) =>\n         loadImportContent(\n          result,\n          stmt,\n          file,\n          options,\n          state\n        )\n      ))\n    })\n    .then((result) => {\n      // Merge loaded statements\n      stmt.children = result.reduce((result, statements) => {\n        if (statements) {\n          result = result.concat(statements)\n        }\n        return result\n      }, [])\n    })\n    .catch((err) => {\n      result.warn(err.message, { node: atRule })\n    })\n}\n\nfunction loadImportContent(result, stmt, filename, options, state)\n{\n  var atRule = stmt.node\n  if (options.skipDuplicates)\n  {\n    // skip files already imported at the same scope\n    if (state.importedFiles[filename])\n      return\n\n    // save imported files to skip them next time\n    state.importedFiles[filename] = true\n  }\n\n  return Promise.resolve(options.load(filename, options))\n    .then((content) => {\n      if (typeof options.transform !== \"function\") {\n        return content\n      }\n      return Promise.resolve(options.transform(content, filename, options))\n      .then((transformed) =>\n         typeof transformed === \"string\" ? transformed : content\n      )\n    })\n    .then((content) => {\n      if (content.trim() === \"\")\n      {\n        result.warn(filename + \" is empty\", { node: atRule })\n        return\n      }\n\n      // skip previous imported files not containing @import rules\n      if (state.hashFiles[content])\n        return\n\n      return postcss(options.plugins).process(content, {\n        from: filename,\n        syntax: result.opts.syntax,\n        parser: result.opts.parser\n      })\n      .then((importedResult) => {\n        var styles = importedResult.root\n        result.messages = result.messages.concat(importedResult.messages)\n\n        if (options.skipDuplicates)\n        {\n          var hasImport = styles.some((child) =>\n             child.type === \"atrule\" && child.name === \"import\"\n          )\n\n          if (!hasImport)\n            state.hashFiles[content] = true\n        }\n\n        result.messages.push({\n          type: \"dependency\",\n          file: filename\n        })\n\n        // recursion: import @import from imported file\n        return parseStyles(result, styles, options, state)\n      })\n    })\n}\n\nexport default postcss.plugin(\"postcss-smart-import\", SmartImport)\n"],"names":["moduleDirectories","resolveModule","id","opts","res","rej","err","path","base","options","paths","resolveOpts","processPackage","pkg","style","main","browser","test","catch","indexOf","unshift","Error","join","loadContent","filename","readCache","stringify","valueParser","result","styles","statements","nodes","each","node","stmt","type","name","parseImport","length","push","atRule","prev","warn","params","value","toString","uri","fullUri","SmartImport","assign","process","cwd","resolveId","root","resolve","Array","isArray","map","p","state","source","input","file","importedFiles","plugins","parseStyles","then","bundle","addDependencyTo","addDependency","forEach","onImport","applyRaws","index","parent","before","raws","applyStyles","undefined","append","media","parseStatements","promiseEach","resolveImportId","imports","children","child","concat","dirname","resolved","all","loadImportContent","reduce","message","skipDuplicates","load","content","transform","transformed","trim","hashFiles","postcss","syntax","parser","importedResult","messages","hasImport","some","plugin"],"mappings":"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"}